name: terraform-destroy.yaml-$(Build.DefinitionName)-$(date:yyyyMMdd)$(rev:.r)

trigger: none

parameters:
  - name: ServiceConnection
    type: string
    default: "fedcred-msi-azdo-libredevops-4a23d149-8cee-4643-a57b-3b3db30e54ce"
    displayName: 'Azure DevOps Service Connection'
    values:
      - "spn-libd-uks-dev-mgmt-01-client-secret-enabled"
      - "spn-libd-uks-dev-mgmt-01"
      - "fedcred-msi-azdo-libredevops-4a23d149-8cee-4643-a57b-3b3db30e54ce"
      - "msi-azdo-libredevops-4a23d149-8cee-4643-a57b-3b3db30e54ce"
      - "uid-libd-uks-dev-mgmt-01"

  - name: TerraformCodeLocation
    type: string
    default: 'terraform'
    displayName: 'Terraform Code Directory Path'

  - name: TerraformStackToRunJson
    type: string
    default: '["rg"]'
    values:
      - '["rg"]'
      - '["network"]'
      - '["azdo-pipelines-setup"]'
      - '["rg", "network"]'
      - '["all"]'
    displayName: 'Terraform Stacks to Run'

  - name: TerraformWorkspace
    type: string
    default: 'dev'
    displayName: 'Terraform Workspace Name'

  - name: CheckovSkipCheck
    type: string
    default: 'CKV2_AZURE_31'
    displayName: 'Checkov Skip Checks (Comma-Separated)'

  - name: DebugMode
    type: string
    values: [ "true", "false" ]
    default: "false"
    displayName: "Debug mode enabled"

  - name: TerraformInitExtraArgsJson
    type: string
    default: >
      [
        "-backend-config=subscription_id=$(TF_VAR_ARM_BACKEND_SUBSCRIPTION_ID)",
        "-backend-config=resource_group_name=$(TF_VAR_ARM_BACKEND_STORAGE_RG_NAME)",
        "-backend-config=storage_account_name=$(TF_VAR_ARM_BACKEND_STORAGE_ACCOUNT)",
        "-backend-config=container_name=$(TF_VAR_ARM_BACKEND_CONTAINER_NAME)"
      ]
    displayName: 'Extra Args for terraform init'

  - name: AzureDevOpsPoolName
    type: string
    default: "vmss-libd-uks-dev-02"
    values:
      - "Default"
      - "Azure Pipelines"
      - "vmss-libd-uks-dev-02"
    displayName: 'The Pool Name for the Job to run on'

resources:
  repositories:
    - repository: githubTemplates
      type: github
      name: libre-devops/terraform-azure-azdo-pipeline-templates
      ref: main
      endpoint: libredevops

variables:
  - group: terraform-${{ parameters.TerraformWorkspace }}-vars

jobs:
  - template: .azuredevops/templates/jobs/terraform-init-plan-destroy.yaml@githubTemplates
    parameters:
      ServiceConnection: ${{ parameters.ServiceConnection }}
      TerraformCodeLocation: ${{ parameters.TerraformCodeLocation }}
      TerraformStackToRunJson: ${{ parameters.TerraformStackToRunJson }}
      TerraformWorkspace: ${{ parameters.TerraformWorkspace }}
      CheckovSkipCheck: ${{ parameters.CheckovSkipCheck }}
      DebugMode: ${{ parameters.DebugMode }}
      TerraformInitExtraArgsJson: ${{ parameters.TerraformInitExtraArgsJson }}
      AzureDevOpsPoolName: ${{ parameters.AzureDevOpsPoolName }}

  - template: .azuredevops/templates/jobs/terraform-manual-approval.yaml@githubTemplates
    parameters:
      dependsOnJobs: [ TerraformInitPlanJob ]

  - template: .azuredevops/templates/jobs/terraform-init-plan-destroy-apply.yaml@githubTemplates
    parameters:
      ServiceConnection: ${{ parameters.ServiceConnection }}
      TerraformCodeLocation: ${{ parameters.TerraformCodeLocation }}
      TerraformStackToRunJson: ${{ parameters.TerraformStackToRunJson }}
      TerraformWorkspace: ${{ parameters.TerraformWorkspace }}
      CheckovSkipCheck: ${{ parameters.CheckovSkipCheck }}
      DebugMode: ${{ parameters.DebugMode }}
      TerraformInitExtraArgsJson: ${{ parameters.TerraformInitExtraArgsJson }}
      AzureDevOpsPoolName: ${{ parameters.AzureDevOpsPoolName }}
      dependsOnJobs: [ ManualApprovalJob ]
