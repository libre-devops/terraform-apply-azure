name: terraform-init-plan.yaml-$(Build.DefinitionName)-$(date:yyyyMMdd)$(rev:.r)

trigger: none

parameters:
  - name: serviceConnection
    type: string
    default: "spn-libd-uks-dev-mgmt-01-client-secret-enabled"
    displayName: 'Azure DevOps Service Connection'
    values:
      - "spn-libd-uks-dev-mgmt-01-client-secret-enabled"
      - "spn-libd-uks-dev-mgmt-01"

  - name: TerraformCodeLocation
    type: string
    default: 'terraform'
    displayName: 'Terraform Code Directory Path'

  - name: TerraformStackToRun
    type: string
    default: '"rg"'
    values:
      - '"rg"'
      - '"network"'
      - '"all"'
    displayName: 'Terraform Stacks to Run'

  - name: CreateTerraformWorkspace
    type: string
    values: [ "true", "false" ]
    default: "true"
    displayName: 'Create or Select Terraform Workspace'

  - name: TerraformWorkspace
    type: string
    default: 'dev'
    displayName: 'Terraform Workspace Name'

  - name: CheckovSkipCheck
    type: string
    default: 'CKV2_AZURE_31'
    displayName: 'Checkov Skip Checks (Comma-Separated)'

  - name: UseAzureClientSecretLogin
    type: string
    values: [ "true", "false" ]
    default: "true"
    displayName: 'Use Azure Client Secret Login'

  - name: UseAzureOidcLogin
    type: string
    values: [ "true", "false" ]
    default: "false"
    displayName: 'Use Azure OIDC Login'

  - name: UseAzureManagedIdentityLogin
    type: string
    values: [ "true", "false" ]
    default: "false"
    displayName: 'Use Azure Managed Identity Login'

  - name: UseAzureServiceConnection
    type: string
    values: [ "true", "false" ]
    default: "true"
    displayName: 'Use Azure DevOps Service Connection'

  - name: DebugMode
    type: string
    values: [ "true", "false" ]
    default: "true"
    displayName: "Debug mode enabled"

  - name: TerraformInitExtraArgs
    type: string
    default: '[]'
#      [
#        "-backend-config=subscription_id=$(TF_VAR_ARM_BACKEND_SUBSCRIPTION_ID)",
#        "-backend-config=resource_group_name=$(TF_VAR_ARM_BACKEND_STORAGE_RG_NAME)",
#        "-backend-config=storage_account_name=$(TF_VAR_ARM_BACKEND_STORAGE_ACCOUNT)",
#        "-backend-config=container_name=$(TF_VAR_ARM_BACKEND_CONTAINER_NAME)"
#      ]
    displayName: 'Extra Args for terraform init'


  - name: TerraformPlanExtraArgs
    type: string
    default: '[ ]'
    displayName: 'Extra Args for terraform plan'

resources:
  repositories:
    - repository: githubTemplates
      type: github
      name: libre-devops/terraform-azure-azdo-pipeline-templates
      ref: main  # or a tag like refs/tags/v1.0.0
      endpoint: libredevops  # Service connection to GitHub

pool: 'Default'

variables:
  - group: terraform-${{ parameters.TerraformWorkspace }}-vars

steps:
  - template: .azuredevops/templates/steps/terraform-init-plan.yaml@githubTemplates  # path in the external repo
    parameters:
      TerraformCodeLocation: ${{ parameters.TerraformCodeLocation }}
      TerraformInitExtraArgs: ${{ parameters.TerraformInitExtraArgs }}
      TerraformPlanExtraArgs: ${{ parameters.TerraformPlanExtraArgs }}
      TerraformStackToRun: ${{ parameters.TerraformStackToRun }}
      UseAzureOidcLogin: ${{ parameters.UseAzureOidcLogin }}
      UseAzureManagedIdentityLogin: ${{ parameters.UseAzureManagedIdentityLogin }}
      UseAzureClientSecretLogin: ${{ parameters.UseAzureClientSecretLogin }}
      TerraformWorkspace: ${{ parameters.TerraformWorkspace }}
      CheckovSkipCheck: ${{ parameters.CheckovSkipCheck }}
      DebugMode: ${{ parameters.DebugMode }}
      serviceConnection: ${{ parameters.serviceConnection }}

